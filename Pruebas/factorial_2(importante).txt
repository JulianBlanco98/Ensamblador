main: addi    $sp, $sp, -4        # Hace espacio en la Pila
         sw      $ra, 4 ($sp)        # Salva la dirección de retorno
      
      	li      $v0, 4              # Salida a la consola
      	la      $a0, str1      
      	syscall

      	li      $v0,  5             # Lectura de un numero
      	syscall

      add      $s0, $zero, $v0    # El numero esta en $v0, se copia a $s0

      add      $a0, $zero, $s0    # Prepara el parametro
      jal      fact               # Llama al factorial

      add      $s1, $v0, $zero    # Respalda el resultado

      li      $v0, 4              # Una cadena a la consola
      la      $a0, str2
      syscall

      addi      $v0, $zero, 1     # Una entero a la consola
      add      $a0, $s0, $zero
      syscall

      li      $v0, 4              # Una cadena a la consola
      la      $a0, str3
      syscall

      addi      $v0, $zero, 1     # Una entero a la consola
      add      $a0, $s1, $zero
      syscall

      li      $v0, 4
      la      $a0, str4
      syscall      

      lw      $ra, 4 ($sp)        # Recupera la dirección de retorno
      addi      $sp, $sp, 4       # Restablece el tope de la Pila
      jr      $31

fact:                             # La funcion que obtiene el factorial
      addi      $sp, $sp, -8      # Hace espacio en la Pila
      sw      $ra, 4 ($sp)        # Salva la dirección de retorno
      sw      $a0, 0 ($sp)        # Salva al argumento n

# Se evalúa para ver si ocurre el caso base (cuando n < 1):
      slti      $t0, $a0, 1       # $t0 = 1 si n < 1
      beq      $t0, $zero, L1     # salta a L1 si no ocurre el caso base

# Si ocurre el caso base, deberían recuperarse los datos de pila, 
# pero como no se han modificado, no es necesario.
# Lo que si se requiere es restablecer al puntero de la pila.

      addi      $v0, $zero, 1      # retorno = 1
      addi      $sp, $sp, 8        # Restablece al apuntador de la pila
      jr      $ra                  # Finaliza regresando el resultado en $v0

# Si no ocurre el caso base, prepara la llamada recursiva
L1:      addi      $a0, $a0, -1      # n = n - 1
      jal      fact                  # llama a fact con n - 1

# Después de la llamada, se hace la restauración de los registros:
      lw      $a0, 0($sp)            # Recupera el valor de n
      lw      $ra, 4($sp)            # recupera la dirección de retorno
      addi      $sp, $sp, 8          # Restablece al apuntador de la pila

#Para concluir, se actualiza el valor de retorno y se 
#regresa el control al invocador:
      mul      $v0, $a0, $v0      # Retorno = n * fact (n - 1)
      jr      $ra                 # regresa al invocador

      .data
str1:  .asciiz   "Dame un numero: "
str2:  .asciiz   "El factorial del numero "
str3:  .asciiz   "  es : "
str4:  .asciiz   "\n\nFin del programa, Adios . . ."